import discord
from discord.ext import commands
import asyncio
from datetime import datetime
import logging
import gspread
from google.oauth2.service_account import Credentials
import os
import json
import base64
from dotenv import load_dotenv
import pytz  # –ù–æ–≤–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('voice_logs.txt'),
        logging.StreamHandler()
    ]
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ intents
intents = discord.Intents.default()
intents.voice_states = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

TRACKED_USERS = [
    "David Perres",
    "Billy Gale",
    "Edvin",
    "Richie Kawasaki",
    "Aron",
    "Isaac Yates",
    "Angel",
    "Virgil",
    "Colby Tailer",
    "Oliver Lux",
    "Jurek",
    "Damian Kowalski",
    "Van Simmons",
    "Oscar Upton",
    "Andi_Landi",
    "Nikitich",
    "Adam Merch",
    "Mason Norville",
    "Yohan Paxton",
    "Yuri Torres",
    "Travis Stone",
    "Martin Santos",
    "Isaiah Miller",
    "Dan Hudson",
    "Iker Huxley"
]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
SPREADSHEET_ID = os.getenv('SPREADSHEET_ID')
SERVICE_ACCOUNT_JSON_BASE64 = os.getenv('SERVICE_ACCOUNT_JSON_BASE64')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ (GMT+2)
TIMEZONE = pytz.timezone('Europe/Kiev')  # –∏–ª–∏ 'Europe/Bucharest'

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
print(f"DISCORD_TOKEN: {'‚úÖ' if DISCORD_TOKEN else '‚ùå'}")
print(f"SPREADSHEET_ID: {'‚úÖ' if SPREADSHEET_ID else '‚ùå'}")
print(f"SERVICE_ACCOUNT_JSON_BASE64: {'‚úÖ' if SERVICE_ACCOUNT_JSON_BASE64 else '‚ùå'}")
print(f"TRACKED_USERS LENGTH: {len(TRACKED_USERS)}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets
def init_sheets():
    try:
        if not SERVICE_ACCOUNT_JSON_BASE64:
            raise ValueError("SERVICE_ACCOUNT_JSON_BASE64 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º Base64 –∏ –ø–∞—Ä—Å–∏–º JSON
        service_account_json = base64.b64decode(SERVICE_ACCOUNT_JSON_BASE64).decode('utf-8')
        service_account_info = json.loads(service_account_json)

        # –°–æ–∑–¥–∞–µ–º credentials –∏–∑ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ JSON
        creds = Credentials.from_service_account_info(service_account_info, scopes=SCOPES)
        gc = gspread.authorize(creds)
        spreadsheet = gc.open_by_key(SPREADSHEET_ID)
        worksheet = spreadsheet.worksheet('BackLog')
        return worksheet
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
        return None

def get_utc_plus_2_time():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC+2"""
    utc_now = datetime.utcnow()
    utc_plus_2 = pytz.utc.localize(utc_now).astimezone(TIMEZONE)
    return utc_plus_2

def is_user_tracked(member):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ display_name –∏ username
    display_name = member.display_name
    username = member.name

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if display_name in TRACKED_USERS or username in TRACKED_USERS:
        return True

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –≤ —Ä–µ–≥–∏—Å—Ç—Ä–µ –∏–ª–∏ –ø—Ä–æ–±–µ–ª–∞—Ö)
    for tracked_user in TRACKED_USERS:
        if (tracked_user.lower().strip() == display_name.lower().strip() or
            tracked_user.lower().strip() == username.lower().strip()):
            return True

    return False

@bot.event
async def on_ready():
    print(f'{bot.user} –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!')
    logging.info(f'–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
    worksheet = init_sheets()
    if worksheet:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets")

@bot.event
async def on_voice_state_update(member, before, after):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not is_user_tracked(member):
        return

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
    if before.channel is None and after.channel is not None:
        log_voice_event(member, "LogIn", after.channel.name)

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
    elif before.channel is not None and after.channel is None:
        log_voice_event(member, "LogOut", before.channel.name)

def log_voice_event(member, event_type, channel_name):
    """–ó–∞–ø–∏—Å—å —Å–æ–±—ã—Ç–∏—è –≤ Google Sheets –∏ –ª–æ–∫–∞–ª—å–Ω—ã–π –ª–æ–≥"""

    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –≤ UTC+2
    current_time = get_utc_plus_2_time()
    date_str = current_time.strftime('%Y-%m-%d')
    time_str = current_time.strftime('%H:%M:%S')
    name = member.display_name
    username = member.name

    # –õ–æ–∫–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    log_message = f"üé§ {name} ({username}) {event_type} –∫–∞–Ω–∞–ª '{channel_name}' –≤ {time_str} (UTC+2)"
    print(log_message)
    logging.info(log_message)

    # –ó–∞–ø–∏—Å—å –≤ Google Sheets
    try:
        worksheet = init_sheets()
        if worksheet:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            row_data = [date_str, name, time_str if event_type == "LogIn" else "",
                       time_str if event_type == "LogOut" else "", channel_name]
            worksheet.append_row(row_data)
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Google Sheets: {row_data}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.run(DISCORD_TOKEN)
